# Java LanguageHelper type mappings
type.standard.Boolean = boolean
type.standard.Long = long
type.standard.Double = double
type.standard.String = java.lang.String
type.standard.Opaque = com.vmware.vapi.data.DataValue
type.standard.Binary = byte[]
type.standard.void = void
type.standard.DateTime = java.util.Calendar
type.standard.URI = java.net.URI
type.standard.Secret = char[]
type.standard.ID = java.lang.String
type.standard.Structure = com.vmware.vapi.bindings.Structure
type.standard.DynamicStructure = com.vmware.vapi.bindings.Structure
type.standard.Exception = com.vmware.vapi.bindings.ApiError

type.optional.Boolean = java.lang.Boolean
type.optional.Long = java.lang.Long
type.optional.Double = java.lang.Double

type.standard.format.list = java.util.List<%s>
type.standard.format.map = java.util.Map<%s, %s>
type.standard.format.set = java.util.Set<%s>
type.standard.refConverter = asTitleCase

client.profile.excludes = Provider,ApiInterface
provider.profile.excludes = Stub

# IDL terminology that requires translation to Java terms
term.service = interface
term.package = package
term.component = component
term.operation = method
term.parameter = parameter
term.result = return value
term.error = exception
term.structure = class
term.structures = classes
term.field = property
term.fields = properties
term.attribute = property
term.attributes = properties
term.enumerated\ type = enumeration class
term.enumerated\ types = enumeration classes
term.enumeration\ value = enumeration constant
term.constant = constant field
term.boolean = {@code boolean}
term.double = {@code double}
term.long = {@code long}
term.string = {@link java.lang.String}
term.list = {@link java.util.List}
term.map = {@link java.util.Map}
term.set = {@link java.util.Set}
term.unset = {@code null}

# Keywords in the Java language (from The Java Language Specification, Third Edition)
name.reserved.words = \
    abstract, assert, boolean, break, byte, \
    case, catch, char, class, const, continue, \
    default, do, double, else, enum, extends, \
    final, finally, float, for, goto, \
    if, implements, import, instanceof, int, interface, \
    long, native, new, \
    package, private, protected, public, return, \
    short, static, strictfp, super, switch, synchronized, \
    this, throw, throws, transient, try, void, volatile, while, \
    true, false, null

