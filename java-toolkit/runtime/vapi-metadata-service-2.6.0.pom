<?xml version="1.0" encoding="UTF-8"?>
<!-- VMware Confidential 2013-2016 VMware, Inc. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>vapi</artifactId>
    <groupId>com.vmware.vapi</groupId>
    <version>2.6.0</version>
  </parent>
  <groupId>com.vmware.vapi</groupId>
  <artifactId>vapi-metadata-service</artifactId>
  <packaging>jar</packaging>
  <name>vapi-metadata-service</name>
  <description>vAPI Metadata Service</description>

  <properties>
    <gen.java.dest>${project.build.directory}/java-bindings</gen.java.dest>
    <gen.java.dest.test>${project.build.directory}/java-bindings-test</gen.java.dest.test>
    <skipGenerate />
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>Generate Java bindings for metadata service VMODL2</id>
            <phase>generate-sources</phase>
            <configuration>
              <skip>${skipGenerate}</skip>
              <executable>${idlJavaGenerator}</executable>
              <workingDirectory>${java-toolkit.generator.bin.dir}</workingDirectory>
              <arguments>
                <argument>--output</argument>
                <argument>${gen.java.dest}</argument>
                <argument>--skip</argument>
                <argument>com.vmware.vapi.std.errors</argument>
                <argument>--skip</argument>
                <argument>com.vmware.vapi.std.activation</argument>
                <argument>--skip</argument>
                <argument>com.vmware.vapi.std.interposition</argument>
                <argument>--skip</argument>
                <argument>com.vmware.vapi.std.introspection</argument>
                <argument>--skip</argument>
                <argument>com.vmware.vapi.std</argument>
                <argument>--skip</argument>
                <argument>com.vmware.vapi.admin</argument>
                <argument>${idl.toolkit.models}/vapi</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
          <execution>
            <id>Generate test Java bindings</id>
            <phase>generate-sources</phase>
            <configuration>
              <skip>${skipGenerate}</skip>
              <executable>${idlJavaGenerator}</executable>
              <workingDirectory>${java-toolkit.generator.bin.dir}</workingDirectory>
              <arguments>
                <argument>--output</argument>
                <argument>${gen.java.dest.test}</argument>
                <argument>--skip</argument>
                <argument>com.vmware.vapi.std.errors</argument>
                <argument>--skip</argument>
                <argument>com.vmware.vapi.std.activation</argument>
                <argument>--skip</argument>
                <argument>com.vmware.vapi.std.interposition</argument>
                <argument>--skip</argument>
                <argument>com.vmware.vapi.std.introspection</argument>
                <argument>--skip</argument>
                <argument>com.vmware.vapi.std</argument>
                <argument>${project.basedir}/src/main/vmodl/test/security/</argument>
                <argument>${project.basedir}/src/main/vmodl/test/metamodel/</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
          <execution>
            <id>Generate test metadata</id>
            <phase>generate-resources</phase>
            <configuration>
              <skip>${skipGenerate}</skip>
              <executable>${vmodlParser}</executable>
              <workingDirectory>${idl.toolkit.root}/bin</workingDirectory>
              <arguments>
                <argument>--name</argument>
                <argument>metadata_service_tests</argument>
                <argument>--json-writer</argument>
                <argument>${gen.java.dest.test}/metadata/metadata.service.test.json</argument>
                <argument>--no-warn</argument>
                <argument>--metadata</argument>
                <argument>${project.basedir}/src/test/resources/authz.ini</argument>
                <argument>--metadata</argument>
                <argument>${project.basedir}/src/test/resources/authn.ini</argument>
                <argument>--metadata</argument>
                <argument>${project.basedir}/src/test/resources/routing.ini</argument>
                <argument>--library</argument>
                <argument>${vapi.std.vmidl}</argument>

                <!-- TODO: need to review and fix the unit tests in order to remove these -->
                <arguments>${idl.toolkit.models}/vapi/std/activation</arguments>
                <arguments>${idl.toolkit.models}/vapi/std/interposition</arguments>
                <arguments>${idl.toolkit.models}/vapi/std/introspection</arguments>

                <argument>${project.basedir}/src/main/vmodl/test/security/</argument>
                <argument>${project.basedir}/src/main/vmodl/test/metamodel/</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
          <execution>
            <id>Generate metadata for test product1</id>
            <phase>generate-resources</phase>
            <configuration>
              <skip>${skipGenerate}</skip>
              <executable>${vmodlParser}</executable>
              <workingDirectory>${idl.toolkit.root}/bin</workingDirectory>
              <arguments>
                <argument>--name</argument>
                <argument>product1</argument>
                <argument>--json-writer</argument>
                <argument>${gen.java.dest.test}/metadata/product1.test.json</argument>
                <argument>--no-warn</argument>
                <argument>${project.basedir}/src/main/vmodl/test/products/product1/</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
          <execution>
            <id>Generate metadata for test product2</id>
            <phase>generate-resources</phase>
            <configuration>
              <skip>${skipGenerate}</skip>
              <executable>${vmodlParser}</executable>
              <workingDirectory>${idl.toolkit.root}/bin</workingDirectory>
              <arguments>
                <argument>--name</argument>
                <argument>product2</argument>
                <argument>--json-writer</argument>
                <argument>${gen.java.dest.test}/metadata/product2.test.json</argument>
                <argument>--no-warn</argument>
                <argument>${project.basedir}/src/main/vmodl/test/products/product2/</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>Add source folder for generated Java bindings</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${gen.java.dest}/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>Add source folder for test Java bindings</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${gen.java.dest.test}/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>Add resource folder for test VMODL2 metadata</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${gen.java.dest.test}/metadata</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <!-- Configure javadoc plugin to include the vapi-runtime project so that
             links are resolved when browsing the javadoc of vapi-metadata-service. -->
        <executions>
          <execution>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <includeDependencySources>true</includeDependencySources>
              <dependencySourceIncludes>
                <dependencySourceInclude>com.vmware.vapi:vapi-runtime-client-sdk-sources</dependencySourceInclude>
              </dependencySourceIncludes>
            </configuration>
          </execution>
          <execution>
            <id>no-version</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <includeDependencySources>true</includeDependencySources>
              <dependencySourceIncludes>
                <dependencySourceInclude>com.vmware.vapi:vapi-runtime-client-sdk-sources</dependencySourceInclude>
              </dependencySourceIncludes>
              <finalName>${project.name}</finalName>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.springsource.bundlor</groupId>
        <artifactId>com.springsource.bundlor.maven</artifactId>
        <configuration>
          <manifestTemplatePath>${basedir}/conf/osgi/metadataServiceTemplate.mf</manifestTemplatePath>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <additionalClasspathElements>
            <additionalClasspathElement>${project.basedir}/src/test/resources/authn.jar</additionalClasspathElement>
          </additionalClasspathElements>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>com.vmware.vapi</groupId>
      <artifactId>vapi-runtime</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vmware.vapi</groupId>
      <artifactId>vapi-runtime-client-sdk-sources</artifactId>
      <classifier>sources</classifier>
      <version>${project.version}</version>
      <!-- making this artifact in scope "provided" so that 
           the dependency is not transitively required by
           consumers of metadata-service -->
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
