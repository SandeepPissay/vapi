<?xml version="1.0" encoding="UTF-8"?>
<!-- VMware Confidential 2014-2016 VMware, Inc. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>sample.first</groupId>
        <artifactId>toyvm-client-parent</artifactId>
        <version>2.6.0</version>
        <relativePath>../pom_gobuild.xml</relativePath>
    </parent>
    <groupId>sample.first</groupId>
    <artifactId>toyvm-client-gobuild</artifactId>
    <packaging>jar</packaging>
    <name>toyvm-client-gobuild</name>
    <description>vAPI ToyVM client's gobuild dependencies</description>

    <build>
        <!--
            Plugins that are invoked in this module.
            It may or may not be inherited from a pluginManagement.
        -->
        <plugins>
            <!--
                Downloads the gobuild targets of component specified in
                ${GOBUILD_TARGET} into GoBuild's component cache directory.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>gobuild-component-cache</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <tasks>
                                <ant antfile="${GOBUILD_SRCROOT}/support/gobuild/ant/auto-components.xml">
                                    <property name="GOBUILD_TARGET" value="${GOBUILD_TARGET}"/>
                                    <property name="MAINSRCROOT" value="${GOBUILD_SRCROOT}"/>
                                    <property name="BUILDROOT" value="${GOBUILD_BUILDROOT}"/>
                                    <property name="OBJDIR" value="${GOBUILD_OBJDIR}"/>
                                    <property name="GOBUILD_AUTO_COMPONENTS" value="${GOBUILD_AUTO_COMPONENTS}"/>
                                    <property name="GOBUILD_AUTO_COMPONENTS_HOSTTYPE" value="${GOBUILD_AUTO_COMPONENTS_HOSTTYPE}"/>
                                </ant>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <!--
                        Set the executable flag for the code generator as
                        gobuild doesn't preserve it. See bug 895518 for more
                        details
                    -->
                    <execution>
                        <id>chmod-on-generators</id>
                        <phase>process-sources</phase>
                        <configuration>
                            <target>
                                <chmod file="${GOBUILD_VAPI_CORE_ROOT}/java-toolkit/bin/${idlJavaGenerator}" perm="a+x" />
                                <chmod file="${GOBUILD_VAPI_CORE_ROOT}/metadata-toolkit/bin/${idlMetadataGenerator}" perm="a+x" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
                Import properties that gobuild exported.
                Configuration of the plugin in defined in the parent module.
                Note: Order of execution:
                * [import-gobuild-properties] execution block is present in
                   properties-maven-plugin and runs in generate-sources phase.
                * [gobuild-component-cache] execution block is present in
                   maven-antrun-plugin and runs in generate-sources phase too.
                * [chmod-on-generators] execution block is present in
                   maven-antrun-plugin and runs in process-sources phase.
                * [gobuild-component-cache] produces the properties file
                   consumed [import-gobuild-properties]. [chmod-on-generators]
                   uses the property imported by [import-gobuild-properties].
                * How is this order enforced by the pom?
                  * [import-gobuild-properties] and [gobuild-component-cache]
                    are in the same phase. But, [import-gobuild-properties] is
                    run after [gobuild-component-cache] because the pom file
                    lists [properties-maven-plugin] after [maven-antrun-plugin]
                  * [chmod-on-generators] runs after [import-gobuild-properties]
                    because it is in a later phase of the maven build lifecycle.
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
            </plugin>

            <!--
                This plugin installs vAPI java libraries published in vapi-core
                gobuild into the local maven repository. The plugin also
                installs the corresponding POM files so that dependencies of
                vAPI java runtime are downloaded and used automatically.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install-vapi</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-${vapi.version}.pom</file>
                            <groupId>com.vmware.vapi</groupId>
                            <artifactId>vapi</artifactId>
                            <packaging>pom</packaging>
                            <version>${vapi.version}</version>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-vapi-runtime</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-runtime.jar</file>
                            <sources>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-runtime-sources.jar</sources>
                            <groupId>com.vmware.vapi</groupId>
                            <artifactId>vapi-runtime</artifactId>
                            <version>${vapi.version}</version>
                            <packaging>jar</packaging>
                            <pomFile>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-runtime-${vapi.version}.pom</pomFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-vapi-common-client</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-common-client.jar</file>
                            <sources>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-common-client-sources.jar</sources>
                            <groupId>com.vmware.vapi</groupId>
                            <artifactId>vapi-common-client</artifactId>
                            <version>${vapi.version}</version>
                            <packaging>jar</packaging>
                            <pomFile>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-common-client-${vapi.version}.pom</pomFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-vapi-authn</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-authn.jar</file>
                            <sources>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-authn-sources.jar</sources>
                            <groupId>com.vmware.vapi</groupId>
                            <artifactId>vapi-authn</artifactId>
                            <version>${vapi.version}</version>
                            <packaging>jar</packaging>
                            <pomFile>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-authn-${vapi.version}.pom</pomFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-vapi-rest</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-rest-${vapi.version}.jar</file>
                            <groupId>com.vmware.vapi</groupId>
                            <artifactId>vapi-rest</artifactId>
                            <version>${vapi.version}</version>
                            <packaging>jar</packaging>
                            <pomFile>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-rest-${vapi.version}.pom</pomFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-vapi-metadata-service</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-metadata-service.jar</file>
                            <groupId>com.vmware.vapi</groupId>
                            <artifactId>vapi-metadata-service</artifactId>
                            <version>${vapi.version}</version>
                            <packaging>jar</packaging>
                            <pomFile>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-metadata-service-${vapi.version}.pom</pomFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-vapi-metadata-lib</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-metadata-lib.jar</file>
                            <groupId>com.vmware.vapi</groupId>
                            <artifactId>vapi-metadata-lib</artifactId>
                            <version>${vapi.version}</version>
                            <packaging>jar</packaging>
                            <pomFile>${GOBUILD_VAPI_CORE_ROOT}/lib/java/vapi-metadata-lib-${vapi.version}.pom</pomFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-sso-samltoken</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${GOBUILD_VAPI_CORE_ROOT}/lib/deps/samltoken.jar</file>
                            <groupId>com.vmware.sso</groupId>
                            <artifactId>samltoken</artifactId>
                            <version>1.0</version>
                            <packaging>jar</packaging>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
